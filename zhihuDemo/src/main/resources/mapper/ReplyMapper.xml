<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.zhihu.mapper.ReplyMapper">
	<resultMap id="BaseResultMap" type="com.team.zhihu.bean.Reply">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="essayid" jdbcType="INTEGER" property="essayid" />
		<result column="commitid" jdbcType="INTEGER" property="commitid" />
		<result column="context" jdbcType="VARCHAR" property="context" />
		<result column="fromuserid" jdbcType="INTEGER" property="fromuserid" />
		<result column="touserid" jdbcType="INTEGER" property="touserid" />
		<result column="date" jdbcType="VARCHAR" property="date" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, essayid, commitid, context, fromuserid, touserid, date
	</sql>
	<select id="selectByCommentId" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from reply
		where commitid = #{commentId,jdbcType=INTEGER}
	</select>
	<select id="selectListByCommenId" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from reply
		where commitid = #{commitid,jdbcType=INTEGER}
	</select>
	 <select id="selectCommentNumber" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(*)
    from comment
    where essayid = #{essayid,jdbcType=INTEGER}
  </select>
    <!--  通过一些字段  唯一选择一个reply-->
    <select id="selectByReply" parameterType="com.team.zhihu.bean.Reply" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reply
    where commitid =#{commitid,jdbcType=INTEGER} and fromuserid = #{fromuserid,jdbcType=INTEGER}
    		and touserid = #{touserid,jdbcType=INTEGER} and date= #{date,jdbcType=VARCHAR}
  </select>
	<select id="selectByExample" parameterType="com.team.zhihu.bean.ReplyExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from reply
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from reply
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from reply
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.team.zhihu.bean.ReplyExample">
		delete from reply
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.team.zhihu.bean.Reply">
		insert into reply (id, essayid, commitid,
		context, fromuserid, touserid,
		date)
		values (#{id,jdbcType=INTEGER}, #{essayid,jdbcType=INTEGER},
		#{commitid,jdbcType=INTEGER},
		#{context,jdbcType=VARCHAR}, #{fromuserid,jdbcType=INTEGER}, #{touserid,jdbcType=INTEGER},
		#{date,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.team.zhihu.bean.Reply">
		insert into reply
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="essayid != null">
				essayid,
			</if>
			<if test="commitid != null">
				commitid,
			</if>
			<if test="context != null">
				context,
			</if>
			<if test="fromuserid != null">
				fromuserid,
			</if>
			<if test="touserid != null">
				touserid,
			</if>
			<if test="date != null">
				date,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="essayid != null">
				#{essayid,jdbcType=INTEGER},
			</if>
			<if test="commitid != null">
				#{commitid,jdbcType=INTEGER},
			</if>
			<if test="context != null">
				#{context,jdbcType=VARCHAR},
			</if>
			<if test="fromuserid != null">
				#{fromuserid,jdbcType=INTEGER},
			</if>
			<if test="touserid != null">
				#{touserid,jdbcType=INTEGER},
			</if>
			<if test="date != null">
				#{date,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.team.zhihu.bean.ReplyExample"
		resultType="java.lang.Long">
		select count(*) from reply
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update reply
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.essayid != null">
				essayid = #{record.essayid,jdbcType=INTEGER},
			</if>
			<if test="record.commitid != null">
				commitid = #{record.commitid,jdbcType=INTEGER},
			</if>
			<if test="record.context != null">
				context = #{record.context,jdbcType=VARCHAR},
			</if>
			<if test="record.fromuserid != null">
				fromuserid = #{record.fromuserid,jdbcType=INTEGER},
			</if>
			<if test="record.touserid != null">
				touserid = #{record.touserid,jdbcType=INTEGER},
			</if>
			<if test="record.date != null">
				date = #{record.date,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update reply
		set id = #{record.id,jdbcType=INTEGER},
		essayid = #{record.essayid,jdbcType=INTEGER},
		commitid = #{record.commitid,jdbcType=INTEGER},
		context = #{record.context,jdbcType=VARCHAR},
		fromuserid = #{record.fromuserid,jdbcType=INTEGER},
		touserid = #{record.touserid,jdbcType=INTEGER},
		date = #{record.date,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.team.zhihu.bean.Reply">
		update reply
		<set>
			<if test="essayid != null">
				essayid = #{essayid,jdbcType=INTEGER},
			</if>
			<if test="commitid != null">
				commitid = #{commitid,jdbcType=INTEGER},
			</if>
			<if test="context != null">
				context = #{context,jdbcType=VARCHAR},
			</if>
			<if test="fromuserid != null">
				fromuserid = #{fromuserid,jdbcType=INTEGER},
			</if>
			<if test="touserid != null">
				touserid = #{touserid,jdbcType=INTEGER},
			</if>
			<if test="date != null">
				date = #{date,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.team.zhihu.bean.Reply">
		update reply
		set essayid = #{essayid,jdbcType=INTEGER},
		commitid = #{commitid,jdbcType=INTEGER},
		context = #{context,jdbcType=VARCHAR},
		fromuserid = #{fromuserid,jdbcType=INTEGER},
		touserid = #{touserid,jdbcType=INTEGER},
		date = #{date,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>